<?xml version="1.1" encoding="UTF-8" standalone="no"?>
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
                   xmlns:ext="http://www.liquibase.org/xml/ns/dbchangelog-ext"
                   xmlns:pro="http://www.liquibase.org/xml/ns/pro"
                   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                   xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog dbchangelog.xsd
    http://www.liquibase.org/xml/ns/dbchangelog-ext dbchangelog.xsd
    http://www.liquibase.org/xml/ns/pro dbchangelog.xsd" >
    <changeSet author="Sheldan" id="meetup-table">
        <createTable tableName="meetup">
            <column name="id" type="BIGINT">
                <constraints nullable="false"/>
            </column>
            <column name="organizer_user_in_server_id" type="BIGINT">
                <constraints nullable="false"/>
            </column>
            <column name="meetup_channel_id" type="BIGINT">
                <constraints nullable="false"/>
            </column>
            <column name="server_id" type="BIGINT">
                <constraints nullable="false"/>
            </column>
            <column name="message_id" type="BIGINT">
                <constraints nullable="true"/>
            </column>
            <column name="topic" type="VARCHAR(256)">
                <constraints nullable="false"/>
            </column>
            <column name="state" type="VARCHAR(256)">
                <constraints nullable="false"/>
            </column>
            <column name="description" type="VARCHAR(2048)">
                <constraints nullable="true"/>
            </column>
            <column name="meetup_time" type="TIMESTAMP WITHOUT TIME ZONE">
                <constraints nullable="false"/>
            </column>
            <column name="created" type="TIMESTAMP WITHOUT TIME ZONE"/>
            <column name="updated" type="TIMESTAMP WITHOUT TIME ZONE"/>
            <column name="early_reminder_job_trigger_key" type="VARCHAR(255)"/>
            <column name="late_reminder_job_trigger_key" type="VARCHAR(255)"/>
        </createTable>
        <addPrimaryKey columnNames="server_id, id" tableName="meetup" constraintName="pk_meetup" validate="true"/>
        <addForeignKeyConstraint baseColumnNames="meetup_channel_id" baseTableName="meetup" constraintName="fk_meetup_channel"
                                 deferrable="false" initiallyDeferred="false" onDelete="NO ACTION" onUpdate="NO ACTION"
                                 referencedColumnNames="id" referencedTableName="channel" validate="true"/>
        <addForeignKeyConstraint baseColumnNames="organizer_user_in_server_id" baseTableName="meetup" constraintName="fk_meetup_organizer"
                                 deferrable="false" initiallyDeferred="false" onDelete="NO ACTION" onUpdate="NO ACTION"
                                 referencedColumnNames="user_in_server_id" referencedTableName="user_in_server" validate="true"/>
        <addForeignKeyConstraint baseColumnNames="server_id" baseTableName="meetup" constraintName="fk_meetup_server"
                                 deferrable="false" initiallyDeferred="false" onDelete="NO ACTION" onUpdate="NO ACTION"
                                 referencedColumnNames="id" referencedTableName="server" validate="true"/>
        <sql>
            DROP TRIGGER IF EXISTS meetup_update_trigger ON meetup;
            CREATE TRIGGER meetup_update_trigger BEFORE UPDATE ON meetup FOR EACH ROW EXECUTE PROCEDURE update_trigger_procedure();
        </sql>
        <sql>
            DROP TRIGGER IF EXISTS meetup_insert_trigger ON meetup;
            CREATE TRIGGER meetup_insert_trigger BEFORE INSERT ON meetup FOR EACH ROW EXECUTE PROCEDURE insert_trigger_procedure();
        </sql>
        <sql>
            ALTER TABLE meetup ADD CONSTRAINT check_meetup_state CHECK (state IN ('NEW', 'CONFIRMED', 'CANCELLED', 'DONE'));
        </sql>
    </changeSet>

</databaseChangeLog>